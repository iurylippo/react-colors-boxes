{"version":3,"sources":["Helpers.js","ColorBox.js","ColorBoxContainer.js","App.js","index.js"],"names":["colors","randColors","Math","floor","random","length","ColorBox","props","state","color","handleClick","bind","newColor","this","setState","e","changeColor","onClick","className","style","backgroundColor","Component","ColorBoxContainer","boxes","map","d","Allcolors","defaultProps","Array","from","App","ReactDOM","render","document","getElementById"],"mappings":"yUAAMA,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGEC,EAAa,SAACD,GAAD,OAAYA,EAAOE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAOK,UCmBzDC,G,kBA3BX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,MAAQR,EAAW,EAAKM,MAAMP,SAElC,EAAKU,YAAc,EAAKA,YAAYC,KAAjB,gBANJ,E,2EAUf,IAAIC,EACJ,GACIA,EAAWX,EAAWY,KAAKN,MAAMP,cAC7BY,IAAaC,KAAKL,MAAMC,OAEhCI,KAAKC,SAAS,CAACL,MAAQG,M,kCAGfG,GACRF,KAAKG,gB,+BAIL,OAAO,yBAAKC,QAASJ,KAAKH,YAAaQ,UAAU,WAAWC,MAAO,CAACC,gBAAkBP,KAAKL,MAAMC,QAA1F,Y,GAxBQY,cCEjBC,G,uLAOQ,IAAD,OAEL,OAEI,yBAAKJ,UAAU,qBACVL,KAAKN,MAAMgB,MAAMC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAUzB,OAAQ,EAAKO,MAAMmB,oB,GAZxCL,cAA1BC,EAEKK,aAAe,CAClBJ,MAAQK,MAAMC,KAAK,CAACxB,OAASL,EAAOK,SACpCqB,UAAY1B,GAcLsB,Q,MCXAQ,MATf,WACE,OACE,yBAAKZ,UAAU,OACb,2CACA,kBAAC,EAAD,QCHNa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.87e7154f.chunk.js","sourcesContent":["const colors = [\r\n    '#9e4730', \r\n    '#1a603a', \r\n    '#e4854f', \r\n    '#f80fbe', \r\n    '#42465e', \r\n    '#0bc95f', \r\n    '#95b030',\r\n    '#662b22',\r\n    '#e8eb5f',\r\n    '#76f95c'\r\n]\r\n\r\nconst randColors = (colors) => colors[Math.floor(Math.random() * colors.length)];\r\n\r\n\r\n\r\nexport {randColors, colors};","import React, { Component } from 'react';\r\nimport {randColors} from './Helpers';\r\nimport './ColorBox.css';\r\n\r\nclass ColorBox extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            color : randColors(this.props.colors),\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    changeColor() {\r\n        let newColor;\r\n        do {\r\n            newColor = randColors(this.props.colors);\r\n        } while(newColor === this.state.color);\r\n\r\n        this.setState({color : newColor});\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.changeColor();\r\n    }\r\n\r\n    render() {\r\n        return <div onClick={this.handleClick} className=\"ColorBox\" style={{backgroundColor : this.state.color}}>Aqui</div>\r\n    }\r\n}\r\n\r\nexport default ColorBox\r\n","import React, { Component } from 'react'\r\nimport ColorBox from './ColorBox';\r\nimport {colors} from './Helpers';\r\nimport './ColorBoxContainer.css'\r\n\r\n\r\nclass ColorBoxContainer extends Component {\r\n\r\n    static defaultProps = {\r\n        boxes : Array.from({length : colors.length}),\r\n        Allcolors : colors\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            \r\n            <div className=\"ColorBoxContainer\">\r\n                {this.props.boxes.map(d => <ColorBox colors={this.props.Allcolors}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColorBoxContainer\r\n","import React from 'react';\nimport ColorBoxContainer from './ColorBoxContainer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Color boxes</h1>\n      <ColorBoxContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}